{"version":3,"sources":["App.js","customAxios.js","reportWebVitals.js","index.js"],"names":["Home","useState","ip","setIp","callback","data","useEffect","url","axios","method","baseURL","withCredentials","then","response","customAxios","className","About","Users","App","isPC","useMediaQuery","query","isTablet","isMobile","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAuDA,SAASA,IAAO,MAEMC,mBAAS,IAFf,mBAEPC,EAFO,KAEHC,EAFG,KAKd,SAASC,EAASC,GAChBF,EAAME,GASR,OALAC,qBAAU,YC/DG,SAAqBC,EAAKH,GACvCI,IAAM,CACJD,IAAK,OAASA,EACdE,OAAQ,OAMRC,QAAS,wBACTC,iBAAiB,IAChBC,MAAK,SAAUC,GAChBT,EAASS,EAASR,SDqDlBS,CAAY,MAAOV,KAClB,IAGD,yBAAQW,UAAU,aAAlB,yEAA+Cb,EAA/C,yBAIJ,SAASc,IACP,OACE,gCACE,uBACA,oEAKN,SAASC,IACP,OACE,gCACE,uBACA,0EAKSC,MAtFf,WACE,IAAMC,EAAOC,wBAAc,CACzBC,MAAO,wBAEHC,EAAWF,wBAAc,CAC7BC,MAAO,+CAEHE,EAAWH,wBAAc,CAC7BC,MAAO,uBAGT,OACE,cAAC,IAAD,UACE,sBAAKN,UAAU,MAAf,UACGI,GAAQ,qCACRG,GAAY,yCACZC,GAAY,yCAEb,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,4BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,uCAMN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOS,KAAK,SAAZ,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,IAAZ,SACE,cAACzB,EAAD,eEpCG0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bb3a343.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport customAxios from \"./customAxios\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import MediaQuery from \"react-responsive\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isPC = useMediaQuery({\n    query: \"(min-width: 1024px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px) and (max-width: 1023px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {isPC && <p>isPC</p>}\n        {isTablet && <p>isTablet</p>}\n        {isMobile && <p>isMobile</p>}\n\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">소개</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">사용자</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/** <switch>는 하위 <Route>들을 살펴보고 현재 URL과 일치하는 첫 번째 경로를 렌더링합니다. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nfunction Home() {\n  //ip 주소 변수 선언\n  const [ip, setIp] = useState(\"\");\n\n  //ip 주소 값을 설정\n  function callback(data) {\n    setIp(data);\n  }\n\n  //첫번째 렌더릉을 다 마친 후 실행\n  useEffect(() => {\n    //클라이언트의 ip주소를 알아내는 백엔드ㄹ의 함수를 호출\n    customAxios(\"/ip\", callback);\n  }, []);\n\n  return (\n    <header className=\"App-header\">이 기기의 IP주소는 바로 {ip}입니다.</header>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <hr />\n      <h2>소개 페이지</h2>\n    </div>\n  );\n}\n\nfunction Users() {\n  return (\n    <div>\n      <hr />\n      <h2>사용자 페이지</h2>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\"; //엑시오스\r\n\r\nexport default function customAxios(url, callback) {\r\n  axios({\r\n    url: \"/api\" + url,\r\n    method: \"post\",\r\n\r\n    /**\r\n     * 개발 환경에서의 크료스 도메인 이슈를 해결하기 위한 코드로\r\n     * 운영 환경에 배포할 경우 15~16\r\n     */\r\n    baseURL: \"http://localhost:8080\",\r\n    withCredentials: true,\r\n  }).then(function (response) {\r\n    callback(response.data);\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}